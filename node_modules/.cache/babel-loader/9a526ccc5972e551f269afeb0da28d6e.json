{"remainingRequest":"E:\\IDEA\\project\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\IDEA\\project\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\IDEA\\project\\ant-design-vue-jeecg\\src\\views\\user\\third\\face\\index.js","dependencies":[{"path":"E:\\IDEA\\project\\ant-design-vue-jeecg\\src\\views\\user\\third\\face\\index.js","mtime":1715411823370},{"path":"E:\\IDEA\\project\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"E:\\IDEA\\project\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"E:\\IDEA\\project\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["/**\n * 获取 浏览器 拍照的权限\n */\nfunction getCamera(option) {\n  option.thisCancas = document.getElementById(option.canvasId);\n  option.thisContext = option.thisCancas.getContext(\"2d\");\n  option.thisVideo = document.getElementById(option.videoId);\n  option.thisVideo.style.display = \"block\"; // 获取媒体属性，旧版本浏览器可能不支持mediaDevices，我们首先设置一个空对象\n\n  if (navigator.mediaDevices === undefined) {\n    navigator.mediaDevices = {};\n  } // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\n  // 使用getUserMedia，因为它会覆盖现有的属性。\n  // 这里，如果缺少getUserMedia属性，就添加它。\n\n\n  if (navigator.mediaDevices.getUserMedia === undefined) {\n    navigator.mediaDevices.getUserMedia = function (constraints) {\n      // 首先获取现存的getUserMedia(如果存在)\n      var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia; // 有些浏览器不支持，会返回错误信息\n      // 保持接口一致\n\n      if (!getUserMedia) {\n        //不存在则报错\n        return Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n      } // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\n\n\n      return new Promise(function (resolve, reject) {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    };\n  }\n\n  var constraints = {\n    audio: false,\n    video: {\n      width: option.videoWidth,\n      height: option.videoHeight,\n      transform: \"scaleX(-1)\"\n    }\n  };\n  navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n    // 旧的浏览器可能没有srcObject\n    if (\"srcObject\" in option.thisVideo) {\n      option.thisVideo.srcObject = stream;\n    } else {\n      // 避免在新的浏览器中使用它，因为它正在被弃用。\n      option.thisVideo.src = window.URL.createObjectURL(stream);\n    }\n\n    option.thisVideo.onloadedmetadata = function (e) {\n      option.thisVideo.play();\n    };\n  }).catch(function (err) {\n    console.log(err);\n  });\n  return option;\n}\n/**\n * 绘制图片\n * 返回格式为base64\n * @param option\n */\n\n\nfunction draw(option) {\n  option.thisContext.drawImage(option.thisVideo, 0, 0, option.videoWidth, option.videoHeight);\n  return option.thisCancas.toDataURL(\"image/png\");\n}\n\nexport default {\n  getCamera: getCamera,\n  draw: draw\n};",{"version":3,"sources":["E:/IDEA/project/ant-design-vue-jeecg/src/views/user/third/face/index.js"],"names":["getCamera","option","thisCancas","document","getElementById","canvasId","thisContext","getContext","thisVideo","videoId","style","display","navigator","mediaDevices","undefined","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","Promise","reject","Error","resolve","call","audio","video","width","videoWidth","height","videoHeight","transform","then","stream","srcObject","src","window","URL","createObjectURL","onloadedmetadata","e","play","catch","err","console","log","draw","drawImage","toDataURL"],"mappings":"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","sourcesContent":["/**\n * 获取 浏览器 拍照的权限\n */\n\nfunction getCamera(option) {\n    option.thisCancas = document.getElementById(option.canvasId);\n    option.thisContext = option.thisCancas.getContext(\"2d\");\n    option.thisVideo = document.getElementById(option.videoId);\n    option.thisVideo.style.display = \"block\";\n    // 获取媒体属性，旧版本浏览器可能不支持mediaDevices，我们首先设置一个空对象\n    if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n    }\n    // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\n    // 使用getUserMedia，因为它会覆盖现有的属性。\n    // 这里，如果缺少getUserMedia属性，就添加它。\n    if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n            // 首先获取现存的getUserMedia(如果存在)\n            var getUserMedia =\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.getUserMedia;\n            // 有些浏览器不支持，会返回错误信息\n            // 保持接口一致\n            if (!getUserMedia) {\n                //不存在则报错\n                return Promise.reject(\n                    new Error(\"getUserMedia is not implemented in this browser\")\n                );\n            }\n            // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\n            return new Promise(function (resolve, reject) {\n                getUserMedia.call(navigator, constraints, resolve, reject);\n            });\n        };\n    }\n    var constraints = {\n        audio: false,\n        video: {\n            width: option.videoWidth,\n            height: option.videoHeight,\n            transform: \"scaleX(-1)\",\n        },\n    };\n    navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(function (stream) {\n            // 旧的浏览器可能没有srcObject\n            if (\"srcObject\" in option.thisVideo) {\n                option.thisVideo.srcObject = stream;\n            } else {\n                // 避免在新的浏览器中使用它，因为它正在被弃用。\n                option.thisVideo.src = window.URL.createObjectURL(stream);\n            }\n            option.thisVideo.onloadedmetadata = function (e) {\n                option.thisVideo.play();\n            };\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    return option\n}\n\n/**\n * 绘制图片\n * 返回格式为base64\n * @param option\n */\nfunction draw(option){\n    option.thisContext.drawImage(option.thisVideo,0,0,option.videoWidth,option.videoHeight);\n    return option.thisCancas.toDataURL(\"image/png\");\n}\n\nexport default {\n    getCamera,\n    draw\n}"]}]}